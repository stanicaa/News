import feedparser
import time
import pymysql
import time
import datetime

#the program parses rss feeds and saves them in the database

#initializing DB connection
db = pymysql.connect("localhost","root","","edgar", charset="utf8mb4" )
cursor = db.cursor()

#initiating the rss sources as a list, and the list to save them to temporarily
rss_list=['http://feeds.bbci.co.uk/news/business/rss.xml?edition=uk', 'http://feeds.bbci.co.uk/news/rss.xml?edition=us', 'http://feeds.bbci.co.uk/news/rss.xml?edition=int', 'http://feeds.bbci.co.uk/news/technology/rss.xml?edition=uk', 'http://rss.nytimes.com/services/xml/rss/nyt/World.xml', 'http://rss.nytimes.com/services/xml/rss/nyt/US.xml', 'http://rss.nytimes.com/services/xml/rss/nyt/Business.xml', 'http://rss.nytimes.com/services/xml/rss/nyt/Technology.xml', 'http://rss.nytimes.com/services/xml/rss/nyt/Economy.xml', 'http://rss.nytimes.com/services/xml/rss/nyt/EnergyEnvironment.xml', 'http://rss.nytimes.com/services/xml/rss/nyt/Science.xml', 'http://rss.nytimes.com/services/xml/rss/nyt/Environment.xml', 'http://rss.nytimes.com/services/xml/rss/nyt/Space.xml', 'http://feeds.reuters.com/reuters/businessNews', 'http://feeds.reuters.com/reuters/companyNews', 'http://feeds.reuters.com/reuters/environment', 'http://feeds.reuters.com/reuters/scienceNews', 'http://feeds.reuters.com/reuters/technologyNews', 'http://feeds.reuters.com/Reuters/domesticNews', 'http://feeds.reuters.com/Reuters/worldNews', 'https://www.eurekalert.org/rss/technology_engineering.xml', 'https://www.sciencedaily.com/rss/matter_energy/engineering.xml', 'https://www.theengineer.co.uk/StaticPages/NewsFeeds.htm', 'http://feeds.feedburner.com/TechCrunch/fundings-exits', 'http://feeds.feedburner.com/TechCrunch/startups', 'http://feeds.feedburner.com/TechCrunchIT', 'http://feeds.feedburner.com/TechCrunch/greentech', 'https://spectrum.ieee.org/rss/fulltext', 'http://rss.slashdot.org/Slashdot/slashdot', 'https://seekingalpha.com/feed.xml', 'https://seekingalpha.com/tag/cramers-picks.xml', 'https://seekingalpha.com/tag/ipo-analysis.xml', 'https://seekingalpha.com/tag/long-ideas.xml', 'https://seekingalpha.com/tag/short-ideas.xml', 'https://seekingalpha.com/tag/transcripts.xml', 'https://seekingalpha.com/market_currents.xml', 'https://seekingalpha.com/tag/wall-st-breakfast.xml', 'https://seekingalpha.com/listing/most-popular-articles.xml','https://seekingalpha.com/tag/forex.xml', 'https://seekingalpha.com/tag/editors-picks.xml', 'https://seekingalpha.com/tag/etf-portfolio-strategy.xml', 'https://seekingalpha.com/tag/india.xml', 'https://seekingalpha.com/tag/israel.xml', 'https://seekingalpha.com/tag/japan.xml', 'https://seekingalpha.com/sector/financial.xml', 'https://seekingalpha.com/sector/healthcare.xml', 'https://seekingalpha.com/sector/utilities.xml', 'https://us.spindices.com/rss/rss-details/?rssFeedName=all-indices', 'https://us.spindices.com/rss/rss-details/?rssFeedName=us-equity', 'https://us.spindices.com/rss/rss-details/?rssFeedName=global-equity', 'https://us.spindices.com/rss/rss-details/?rssFeedName=fixed-income', 'https://us.spindices.com/rss/rss-details/?rssFeedName=commodities', 'https://us.spindices.com/rss/rss-details/?rssFeedName=real-estate', 'https://us.spindices.com/rss/rss-details/?rssFeedName=specialty', 'https://us.spindices.com/rss/rss-details/?rssFeedName=strategy', 'https://us.spindices.com/rss/rss-details/?rssFeedName=global', 'https://us.spindices.com/rss/rss-details/?rssFeedName=americas', 'https://us.spindices.com/rss/rss-details/?rssFeedName=europe', 'https://us.spindices.com/rss/rss-details/?rssFeedName=middle-east-africa', 'https://us.spindices.com/rss/rss-details/?rssFeedName=asia-pacific', 'https://news.bitcoin.com/feed/', 'http://feeds.marketwatch.com/marketwatch/topstories/', 'http://feeds.marketwatch.com/marketwatch/realtimeheadlines/', 'http://feeds.marketwatch.com/marketwatch/marketpulse/', 'http://feeds.marketwatch.com/marketwatch/bulletins', 'http://feeds.marketwatch.com/marketwatch/StockstoWatch/', 'http://feeds.marketwatch.com/marketwatch/internet/', 'http://feeds.marketwatch.com/marketwatch/mutualfunds/', 'http://feeds.marketwatch.com/marketwatch/software/', 'http://feeds.marketwatch.com/marketwatch/financial/', 'http://feeds.marketwatch.com/marketwatch/commentary/', 'http://feeds.marketwatch.com/marketwatch/newslettersandresearch/', 'http://feeds.marketwatch.com/marketwatch/Autoreviews/', 'https://www.cnbc.com/id/100003114/device/rss/rss.html', 'https://www.cnbc.com/id/100727362/device/rss/rss.html', 'https://www.cnbc.com/id/15837362/device/rss/rss.html', 'https://www.cnbc.com/id/19832390/device/rss/rss.html', 'https://www.cnbc.com/id/19794221/device/rss/rss.html', 'https://www.cnbc.com/id/10001147/device/rss/rss.html', 'https://www.cnbc.com/id/15839135/device/rss/rss.html', 'https://www.cnbc.com/id/100370673/device/rss/rss.html', 'https://www.cnbc.com/id/20910258/device/rss/rss.html', 'https://www.cnbc.com/id/10000664/device/rss/rss.html', 'https://www.cnbc.com/id/19854910/device/rss/rss.html', 'https://www.cnbc.com/id/10000113/device/rss/rss.html', 'https://www.cnbc.com/id/10001054/device/rss/rss.html', 'https://www.cnbc.com/id/10000101/device/rss/rss.html', 'https://www.cnbc.com/id/19836768/device/rss/rss.html', 'https://www.cnbc.com/id/10000110/device/rss/rss.html', 'https://www.cnbc.com/id/10000116/device/rss/rss.html', 'https://www.cnbc.com/id/10000739/device/rss/rss.html', 'https://www.cnbc.com/id/44877279/device/rss/rss.html', 'https://www.cnbc.com/id/23103686/device/rss/rss.html', 'https://www.cnbc.com/id/20409666/device/rss/rss.html', 'https://www.cnbc.com/id/20398120/device/rss/rss.html', 'https://www.cnbc.com/id/19206666/device/rss/rss.html', 'https://www.cnbc.com/id/38818154/device/rss/rss.html', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Business', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Economy', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Technology', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=US+Markets', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=International', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Banking+and+Loans', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Credit+and+Debt', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Insurance', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Real+Estate', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Retirement', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Small+Business', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Investing+Ideas', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Mutual+Funds', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Options', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Stocks', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Bonds', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Commodities', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=ETFs', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Forex+and+Currencies', 'http://articlefeeds.nasdaq.com/nasdaq/categories?category=Futures', 'https://www.investopedia.com/feedbuilder/feed/getfeed/?feedName=rss_headline', 'https://www.investopedia.com/feedbuilder/feed/getfeed/?feedName=rss_stock_analysis', 'https://www.investopedia.com/feedbuilder/feed/getfeed/?feedName=rss_articles', 'http://www.wsj.com/xml/rss/3_7041.xml', 'http://www.wsj.com/xml/rss/3_7085.xml', 'http://www.wsj.com/xml/rss/3_7014.xml', 'http://www.wsj.com/xml/rss/3_7031.xml', 'http://www.wsj.com/xml/rss/3_7455.xml', 'https://blogs.wsj.com/bankruptcy/feed/', 'https://blogs.wsj.com/capitaljournal/feed/', 'https://blogs.wsj.com/chinarealtime/feed/', 'http://feeds.wsjonline.com/wsj/dailyfix/feed/', 'http://feeds.wsjonline.com/wsj/deals/feed', 'http://feeds.wsjonline.com/wsj/biztech/feed', 'http://feeds.wsjonline.com/wsj/developments/feed', 'https://blogs.wsj.com/exchange/feed/', 'https://blogs.wsj.com/wealth-manager/feed/', 'https://blogs.wsj.com/hong-kong/feed/', 'https://blogs.wsj.com/ideas-market/feed/', 'https://blogs.wsj.com/indiarealtime/feed/', 'https://blogs.wsj.com/japanrealtime/feed/', 'https://blogs.wsj.com/korearealtime/feed/', 'https://blogs.wsj.com/marketbeat/feed/', 'http://feeds.wsjonline.com/wsj/economics/feed', 'https://blogs.wsj.com/venturecapital/feed/', 'https://blogs.wsj.com/washwire/feed/', 'https://www.yahoo.com/news/rss/mostviewed', 'http://feeds.feedburner.com/autonews/BreakingNews', 'http://feeds.feedburner.com/autonews/LatestIssue', 'http://feeds.feedburner.com/AutomotiveNewsFutureProductPipelineFeed', 'http://feeds.feedburner.com/AutomotiveNewsFirstShiftMorningNewscastFeed', 'http://feeds.feedburner.com/AutomotiveNewsAutomotiveNewsTvAfternoonNewscastFeed', 'http://feeds.feedburner.com/MobilityReport', 'http://feeds.feedburner.com/autonews/AutomakerNews', 'http://feeds.feedburner.com/autonews/SupplierNews', 'http://feeds.feedburner.com/autonews/EuropeNews', 'http://feeds.feedburner.com/autonews/ColumnistsAndBloggers', 'http://feeds.feedburner.com/autonews/EditorsPicks', 'http://feeds.feedburner.com/autonews/RetailNews', 'http://feeds.feedburner.com/autonews/MarketingNews', 'http://feeds.feedburner.com/autonews/UsedVehiclesNews', 'https://www.just-auto.com/alerts/rssarticle.aspx', 'https://www.just-auto.com/alerts/rssresearch.aspx', 'https://www.just-auto.com/alerts/rsscomment.aspx', 'https://www.just-auto.com/alerts/rssanalysis.aspx', 'https://www.just-auto.com/alerts/rssinterview.aspx', 'https://www.just-auto.com/alerts/rssnews.aspx', 'https://investingnews.com/category/daily/feed/', 'http://ieefa.org/feed/', 'http://feed.zacks.com/commentary/AllStories/rss', 'https://culture.fool.com/feed/', 'http://www.asianinvestor.net/RSS/rss.ashx', 'http://www.stockinvestorplace.com/sipnews/rss.php?channel=1', 'http://www.stockinvestorplace.com/sipnews/rss.php?channel=8', 'http://www.stockinvestorplace.com/sipnews/rss.php?channel=9', 'http://feeds.feedburner.com/InvestorPlace', 'http://feeds.washingtonpost.com/rss/opinions', 'http://feeds.washingtonpost.com/rss/politics', 'http://feeds.washingtonpost.com/rss/local', 'http://feeds.washingtonpost.com/rss/national', 'http://feeds.washingtonpost.com/rss/world', 'http://feeds.washingtonpost.com/rss/business', 'https://www.zdnet.com/blog/rss.xml', 'https://www.zdnet.com/news/rss.xml', 'https://www.wired.com/feed/rss', 'https://www.wired.com/feed/category/business/latest/rss', 'https://www.wired.com/feed/category/transportation/latest/rss', 'http://feeds.mashable.com/Mashable', 'https://gizmodo.com/rss', 'https://www.theverge.com/rss/index.xml', 'https://www.digitaltrends.com/feed/', 'https://www.techradar.com/rss', 'http://feeds.feedburner.com/venturebeat/SZYF', 'https://www.engadget.com/rss.xml', 'http://www.mining.com/tag/aluminum/feed/', 'http://www.mining.com/tag/chromite/feed/', 'http://www.mining.com/tag/coal/feed/', 'http://www.mining.com/tag/cobalt/feed/', 'http://www.mining.com/tag/copper/feed/', 'http://www.mining.com/tag/diamond/feed/', 'http://www.mining.com/tag/gold/feed/', 'http://www.mining.com/tag/iron-ore/feed/', 'http://www.mining.com/tag/molybdenum/feed/', 'http://www.mining.com/tag/nickel/feed/', 'http://www.mining.com/tag/oil-sands/feed/', 'http://www.mining.com/tag/palladium/feed/', 'http://www.mining.com/tag/platinum/feed/', 'http://www.mining.com/tag/potash/feed/', 'http://www.mining.com/tag/silver/feed/', 'http://www.mining.com/tag/tin/feed/', 'http://www.mining.com/tag/tantalum/feed/', 'http://www.mining.com/tag/tungsten/feed/', 'http://www.mining.com/tag/uranium/feed/', 'http://www.mining.com/tag/vanadium/feed/', 'http://www.mining.com/tag/zinc/feed/', 'https://www.platts.com/rssfeeddetail/oil', 'https://www.platts.com/rssfeeddetail/electricpower', 'https://www.platts.com/rssfeeddetail/naturalgas', 'https://www.platts.com/rssfeeddetail/coal', 'https://www.platts.com/rssfeeddetail/petrochemicals', 'https://www.platts.com/rssfeeddetail/metals', 'https://www.platts.com/rssfeeddetail/shipping', 'https://www.platts.com/rssfeeddetail/agriculture', 'http://blogs.platts.com/feed/', 'https://www.platts.com/rssfeeddetail/xml/whatsnewrss', 'https://www.digitimes.com/rss/daily.xml', 'https://cointelegraph.com/rss']

#the function gets the rss links and builds the list of information
def rss_feed(link):
    feed=feedparser.parse(link)
    feed_list=[]
    for post in feed.entries:
        if post.title:
            if post.has_key('summary'):
                feed_list.append([post.title, post.summary, post.link, link])
            else:
                feed_list.append([post.title, 'none', post.link, link])
    
    return feed_list

#the function takes a list created from an rss feed and saves it to the DB, after checking for double entries
def db_write(list):
    cursor.execute(""" SELECT title FROM news """)
    result=cursor.fetchall()
    #organizing the list for easier comparison
    result_reset=[]
    for j in result:
        result_reset.append(j[0])
    for i in list:
        
            if i[0] not in result_reset:
                ts = time.time()
                timestamp = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d')
                for k in range(len(i)):
                    if len(i[k])>390:
                        i[k]=i[k][:390]
                cursor.execute(""" INSERT INTO news VALUES ('%s', '%s', '%s', '%s', '%s') """ % (db.escape_string(i[0]), db.escape_string(i[1]), db.escape_string(i[2]),db.escape_string(i[3]),timestamp))
                db.commit()
    return

#the actual parsing and writing to the database. Creating a continuous loop
while True:
    for i in rss_list:
        print(i)
        d=rss_feed(i)
        if d:
            db_write(d)
    print('Waiting now for 60mins before trying again')
    time.sleep(3600)




